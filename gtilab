#!/bin/bash

# Janusz Ładecki <szunaj13pl@gmail.com>
# 21.09.2017

RED='\033[0;31m'
NC='\033[0m' # No Color

# GITLAB_URL=""
# GITLAB_PRIVATE_TOKEN=""
PROJECT_SEARCH_PARAM="$1"

gitlabScript=$(mktemp /tmp/$scriptName.XXXXXX)
gitlabNames=$(mktemp /tmp/$scriptName.XXXXXX)
gitlabGit=$(mktemp /tmp/$scriptName.XXXXXX)

function isInstalled(){

    local packageName=$1
    
    INSTALLED=$(dpkg-query -s "$packageName" 2>&1 | grep --no-messages Status )
    if [ "$INSTALLED" != "Status: install ok installed" ]; then
        echo -e "${NC} $packageName ${RED}not installed ${NC}"
        sudo apt install -y "$packageName"
    fi

}


function preRunCheck(){

    if [ -z "$GITLAB_URL" ]; then
        echo -e "${RED}Please set the environment variable GITLAB_URL ${NC}"
        exit 1
    fi
    
    if [ -z "$GITLAB_PRIVATE_TOKEN" ]; then
        echo -e "${RED}Please set the environment variable GITLAB_PRIVATE_TOKEN ${NC}"
        echo "See ${GITLAB_URL}/profile/account"
        exit 1
    fi
    
    ping -c 2 "$GITLAB_URL" > /dev/null || (echo -e "$GITLAB_URL ${RED} Unrechable ${NC}" && exit 1)

}


function getData(){
    
    local online=$(curl -s "https://${GITLAB_URL}/api/v3/projects?private_token=$GITLAB_PRIVATE_TOKEN&search=$PROJECT_SEARCH_PARAM&per_page=999&sort=asc&order_by=name" \
    | jq --raw-output --compact-output ".[]  | { "name": .name, "path": .path, "git": .ssh_url_to_repo }") || (echo "Can't fetch data" && exit 1)
    
    i=1
    echo "$online" | while read line;do
        
        git="$(echo $line | jq -r ".git")"
        echo -e "$i) git clone --progress --recursive --verbose $git ;;" >> "$gitlabGit"
        
        name="$(echo $line | jq -r ".name")"
        local projects_names=$(echo $i" "\""$name"\" "off" >> "$gitlabNames")
        
        i=$[i+1]
    done

}


function createGui(){
    
    local projects_names="$(cat $gitlabNames)"
    
cat >> "$gitlabScript" <<- EndOfScript
#!/bin/bash

# Janusz Ładecki <szunaj13pl@gmail.com>
# 21.09.2017

function createGui(){
    local TYPE="checklist"
    local HEIGHT=49
    local WIDTH=60
    local CHOICE_HEIGHT=42
    local BACKTITLE="GitLab"
    local TITLE="GitLab"
    local MENU="Choose repo to clone:"


    local OPTIONS=($(cat $gitlabNames))

        local CHOICES=\$(dialog  --separate-output --checklist   \
                "\$MENU" \
                \$HEIGHT \$WIDTH \$CHOICE_HEIGHT \
                "\${OPTIONS[@]}" \
                2>&1 >/dev/tty)

    clear

    for choice in \$CHOICES
    do
        case \$choice in

EndOfScript
    
    # Insert git clone commands
    cat "$gitlabGit" >> "$gitlabScript"
    # Apend closing for 'for, case, function'
    echo -e "\n\t esac \n done \n} \n createGui" >> "$gitlabScript"
    
}


# Install requierd programs
isInstalled curl
isInstalled git
isInstalled jq
isInstalled dialog

preRunCheck
getData
createGui

# Run
chmod +x "$gitlabScript"
"$gitlabScript"

# Cleaning
rm -f "$gitlabNames" "$gitlabGit" "$gitlabScript"
